import { type NextPage } from "next"
import { signIn, signOut, useSession } from "next-auth/react"
import Head from "next/head"

import { Box, Button } from "@mui/material"
import { api } from "@utils/api"

const Home: NextPage = () => {
	const hello = api.example.hello.useQuery({ text: "from tRPC" })

	return (
		<>
			<Head>
				<title>Create T3 App</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Box
				component="main"
				sx={{
					p: 2,
					border: "1px dashed grey",
					my: 4,
					display: "flex",
					flexDirection: "column",
					justifyContent: "center",
					alignItems: "center",
				}}
			>
				<h1>T3 + MUI Example</h1>
				<Box
					sx={{
						display: "flex",
						alignItems: "center",
						flexDirection: "column",
						justifyContent: "center",
					}}
				>
					<p>{hello.data ? hello.data.greeting : "Loading tRPC query..."}</p>
					<AuthShowcase />
				</Box>
			</Box>
		</>
	)
}

export default Home

const AuthShowcase: React.FC = () => {
	const { data: sessionData } = useSession()

	const { data: secretMessage } = api.example.getSecretMessage.useQuery(
		undefined, // no input
		{ enabled: sessionData?.user !== undefined }
	)

	return (
		<>
			{sessionData && secretMessage && (
				<p>
					<span>Logged in as {sessionData.user?.name}</span>
					<span> - {secretMessage}</span>
				</p>
			)}
			<Button
				variant="contained"
				onClick={sessionData ? () => void signOut() : () => void signIn()}
			>
				{sessionData ? "Sign out" : "Sign in"}
			</Button>
		</>
	)
}
